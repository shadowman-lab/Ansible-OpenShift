---
- name: OCP Block
  block:

    - name: Login to OpenShift
      redhat.openshift.openshift_auth:
        host: "{{ openshift_fqdn }}"
        username: "{{ openshift_user }}"
        password: "{{ openshift_password }}"
        validate_certs: false
      register: openshift_auth_results

    - name: Get all DevSpaces
      kubernetes.core.k8s_info:
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        host: "{{ openshift_fqdn }}"
        api_version: workspace.devfile.io/v1alpha2
        kind: DevWorkspace
        validate_certs: false
      register: workspaceoutput

    - name: Output all stopped DevWorkspaces with the time stopped
      ansible.builtin.debug:
        msg: "{{ item.metadata.name }} was stopped at {{ item['status']['conditions'][0]['lastTransitionTime'] }}"
      loop: "{{ workspaceoutput.resources | selectattr('status.phase', '==', 'Stopped') }}"
      loop_control:
        label: "{{ item.metadata.name }}"

    - name: Delete all DevWorkspaces that have been stopped for more than {{ timeinsecondsbeforedelete }} seconds  # noqa: name[template]
      redhat.openshift.k8s:
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        host: "{{ openshift_fqdn }}"
        api_version: workspace.devfile.io/v1alpha2
        kind: DevWorkspace
        validate_certs: false
        state: absent
        name: "{{ item.metadata.name }}"
        namespace: "{{ item.metadata.namespace }}"
      when: ((now(utc=true, fmt="%Y-%m-%d %H:%M:%S") | to_datetime) - (item["status"]["conditions"][0]["lastTransitionTime"] | to_datetime("%Y-%m-%dT%H:%M:%SZ"))).total_seconds() | int > timeinsecondsbeforedelete  # noqa: yaml[line-length]
      loop: "{{ workspaceoutput.resources | selectattr('status.phase', '==', 'Stopped') }}"
      loop_control:
        label: "{{ item.metadata.name }}"

  always:
    - name: If login succeeded, try to log out (revoke access token)
      redhat.openshift.openshift_auth:
        state: absent
        host: "{{ openshift_fqdn }}"
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        validate_certs: false
      when: openshift_auth_results.openshift_auth.api_key is defined
