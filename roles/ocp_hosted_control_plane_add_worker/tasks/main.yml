---
- name: OCP Block
  block:

  - name: Login to OpenShift
    redhat.openshift.openshift_auth:
      host: "{{ openshift_fqdn }}"
      username: "{{ openshift_user }}"
      password: "{{ openshift_password }}"
      validate_certs: false
    register: openshift_auth_results

  - name: Get Agents
    kubernetes.core.k8s_info:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      api_version: agent-install.openshift.io/v1beta1
      kind: Agent
      validate_certs: false
    register: output

  - name: Set name of non approved host
    ansible.builtin.set_fact:
      unapproved_host: "{{ item.metadata.name }}"
    when: not item.spec.approved | default(true)
    loop: "{{ output.resources }}"
    loop_control:
      label: "{{ item.metadata.name }}"

  - name: Update Host to correct hostname and approved
    kubernetes.core.k8s:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      state: present
      api_version: agent-install.openshift.io/v1beta1
      definition:
        kind: Agent
        metadata:
          name: "{{ unapproved_host }}" 
          namespace: shadowman-lab
        spec:
          approved: true
          hostname: "{{ vm_name }}"
      validate_certs: false
    when: unapproved_host is defined

  - name: Get NodePool
    kubernetes.core.k8s_info:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      api_version: hypershift.openshift.io/v1alpha1
      kind: NodePool
      validate_certs: false
    register: nodepool

  - name: Set replica number
    ansible.builtin.set_fact:
      replicanumber: "{{ item.spec.replicas }}"
    when: item.spec.clusterName == "{{ cluster_name }}"
    loop: "{{ nodepool.resources }}"
    loop_control:
      label: "{{ item.spec.clusterName }}"

  - name: Update Node Pool to 2
    kubernetes.core.k8s:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      state: present
      api_version: hypershift.openshift.io/v1alpha1
      validate_certs: false
      definition:
        kind: NodePool
        metadata:
          name: nodepool-{{ cluster_name }}-1
          namespace: "{{ cluster_name }}"
        spec:
          clusterName: "{{ cluster_name }}"
          replicas: 2
          management:
            autoRepair: false
            upgradeType: InPlace
          platform:
            type: Agent
            agent:
              agentLabelSelector:
                matchLabels: {}
          release:
            image: quay.io/openshift-release-dev/ocp-release:{{ version }}-x86_64
    when: replicanumber | int == 1

  - name: Update Node Pool to 3
    kubernetes.core.k8s:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      state: present
      api_version: hypershift.openshift.io/v1alpha1
      validate_certs: false
      definition:
        kind: NodePool
        metadata:
          name: nodepool-{{ cluster_name }}-1
          namespace: "{{ cluster_name }}"
        spec:
          clusterName: "{{ cluster_name }}"
          replicas: 3
          management:
            autoRepair: false
            upgradeType: InPlace
          platform:
            type: Agent
            agent:
              agentLabelSelector:
                matchLabels: {}
          release:
            image: quay.io/openshift-release-dev/ocp-release:{{ version }}-x86_64
    when: replicanumber | int == 2

  - name: Update Node Pool to 4
    kubernetes.core.k8s:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      state: present
      api_version: hypershift.openshift.io/v1alpha1
      validate_certs: false
      definition:
        kind: NodePool
        metadata:
          name: nodepool-{{ cluster_name }}-1
          namespace: "{{ cluster_name }}"
        spec:
          clusterName: "{{ cluster_name }}"
          replicas: 4
          management:
            autoRepair: false
            upgradeType: InPlace
          platform:
            type: Agent
            agent:
              agentLabelSelector:
                matchLabels: {}
          release:
            image: quay.io/openshift-release-dev/ocp-release:{{ version }}-x86_64
    when: replicanumber | int == 3

  always:
    - name: If login succeeded, try to log out (revoke access token)
      redhat.openshift.openshift_auth:
        state: absent
        host: "{{ openshift_fqdn }}"
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        validate_certs: false
      when: openshift_auth_results.openshift_auth.api_key is defined
