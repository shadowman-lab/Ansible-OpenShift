---
- name: OCP Block
  block:

  - name: Login to OpenShift
    redhat.openshift.openshift_auth:
      host: "{{ openshift_fqdn }}"
      username: "{{ openshift_user }}"
      password: "{{ openshift_password }}"
      validate_certs: false
    register: openshift_auth_results

  - name: Get IP Address
    kubernetes.core.k8s_info:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      api_version: v1
      kind: Service
      namespace: "{{ vm_name }}-{{ vm_name }}"
      label_selectors:
        - app = kube-apiserver
      validate_certs: false
    register: ipaddr
    until: ipaddr.resources[0] is defined
    retries: 60
    delay: 10

  - name: Set IP Address
    ansible.builtin.set_stats:
      data:
        apiip: "{{ ipaddr.resources[0].status.loadBalancer.ingress[0].ip }}"
      per_host: false

  - name: Get Agents
    kubernetes.core.k8s_info:
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      host: "{{ openshift_fqdn }}"
      api_version: agent-install.openshift.io/v1beta1
      kind: Agent
      validate_certs: false
    register: output

  - name: Set ip
    ansible.builtin.set_stats:
      data:
        workerip: "{{ item.status.inventory.interfaces[0].ipV4Addresses[0] }}"
      per_host: false
    when: "'{{ vm_name }}' in item.status.inventory.hostname"
    loop: "{{ output.resources }}"
    loop_control:
      label: "{{ item.metadata.name }}"

  always:
    - name: If login succeeded, try to log out (revoke access token)
      redhat.openshift.openshift_auth:
        state: absent
        host: "{{ openshift_fqdn }}"
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        validate_certs: false
      when: openshift_auth_results.openshift_auth.api_key is defined
